# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: deploy_app_jar #停掉进程
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }} #服务器ip地址
        username: ${{ secrets.USERNAME }} #服务器ssh用户名
        password: ${{ secrets.PASSWORD }} #服务器ssh密码
        port: ${{ secrets.PORT }} # 服务器ssh端口（默认22）
        script: |
          nohup java -jar /usr/local/web/demo-0.0.1-SNAPSHOT.jar >/dev/null 2>log &
    - name: scp_upload_jar_file #上传文件到服务器
      uses: garygrossgarten/github-action-scp@release
      with:
        local: '/home/runner/work/sss/sss/target/demo-0.0.1-SNAPSHOT.jar' #打包文件的路径
        remote: '/usr/local/web/demo-0.0.1-SNAPSHOT.jar' #放到服务器的目录
        host: ${{ secrets.HOST }} #服务器ip地址
        username: ${{ secrets.USERNAME }} #服务器ssh用户名
        password: ${{ secrets.PASSWORD }} #服务器ssh密码
        port: ${{ secrets.PORT }} # 服务器ssh端口（默认22）
    - name: deploy_app_jar #开始部署
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }} #服务器ip地址
        username: ${{ secrets.USERNAME }} #服务器ssh用户名
        password: ${{ secrets.PASSWORD }} #服务器ssh密码
        port: ${{ secrets.PORT }} # 服务器ssh端口（默认22）
        script: |
          systemctl restart java-web